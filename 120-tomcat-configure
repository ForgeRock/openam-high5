#!/bin/bash

. ./platform.properties
. ./functions
. ./functions-tomcat

#---------------------------------------------
generateServerCert() {
#---------------------------------------------
  ${OPENSSL} genrsa -out ${TOMCAT_SERVER_KEY_PEM} 2048
  if [ $? != 0 ]; then
    printf "ERROR: Failed to generate server key.\n"
    exitFailure
  fi

  ${OPENSSL} req -new -x509 -key ${TOMCAT_SERVER_KEY_PEM} -out ${TOMCAT_SERVER_CERT_PEM} -days 3650 -subj "/CN=${SERVER_FQDN}" -sha256
  if [ $? != 0 ]; then
    printf "ERROR: Failed to generate self signed server certificate.\n"
    exitFailure
  fi

  #Convert to .p12
  ${OPENSSL} pkcs12 -export -in ${TOMCAT_SERVER_CERT_PEM} -inkey ${TOMCAT_SERVER_KEY_PEM} -out ${TOMCAT_SERVER_KEY_P12} -name ${SERVER_FQDN} -passout pass:${TOMCAT_SERVER_KEY_PIN}

  #Generate Java Keystore and import key
  if [ ! -f ${TOMCAT_KEYSTORE} ]; then
    ${KEYTOOL} -genkey -alias foo -keystore ${TOMCAT_KEYSTORE} -storepass ${TOMCAT_KEYSTORE_STOREPASS} -dname cn=foo -keypass bogusbogus
    ${KEYTOOL} -delete -alias foo -keystore ${TOMCAT_KEYSTORE} -storepass ${TOMCAT_KEYSTORE_STOREPASS}
  fi

  ${KEYTOOL} -importkeystore -srckeystore ${TOMCAT_SERVER_KEY_P12} -srcstoretype pkcs12 -srcalias ${SERVER_FQDN} -srcstorepass ${TOMCAT_SERVER_KEY_PIN} -destkeystore ${TOMCAT_KEYSTORE} -deststoretype jks -deststorepass ${TOMCAT_KEYSTORE_STOREPASS} -destalias ${SERVER_FQDN} -noprompt 
  if [ $? != 0 ]; then
    printf "WARNING: Failed to import server key into keystore at ${TOMCAT_KEYSTORE}.\n"
    # exitFailure
  fi

  printf "INFO: Listing content of keystore ${TOMCAT_KEYSTORE}:\n"
  ${KEYTOOL} -list -keystore ${TOMCAT_KEYSTORE} -storepass ${TOMCAT_KEYSTORE_STOREPASS}

  printf "INFO: Successfully generated server key (${TOMCAT_SERVER_KEY_PEM}) and server certificate (${TOMCAT_SERVER_CERT_PEM}).\n"
}

#---------------------------------------------
modifyTomcatConfig() {
#---------------------------------------------
  #
  # Backup Tomcat config
  #
  CONF_BACKUP=${TOMCAT_CONF_DIR}/server.xml.orig
  if [ -f ${TOMCAT_CONF_DIR}/server.xml ]; then
    if [ -f ${CONF_BACKUP} ]; then
      printf "INFO: The ${CONF_BACKUP} already exists. The tomcat config will not be backed up again.\n"
    else 
      ${CP} -p ${TOMCAT_CONF_DIR}/server.xml ${CONF_BACKUP}
      printf "INFO: Tomcat config backed up to ${CONF_BACKUP}.\n"
    fi
  fi

  #
  # Generate new server.xml from template
  #
  TOMCAT_KEYSTORE_ESCAPED=`escapePath ${TOMCAT_KEYSTORE}`
  ${SED} -e "s/%TOMCAT_HTTP_PORT%/${TOMCAT_HTTP_PORT}/g" -e "s/%TOMCAT_HTTPS_PORT%/${TOMCAT_HTTPS_PORT}/g" -e "s/%TOMCAT_KEYSTORE%/${TOMCAT_KEYSTORE_ESCAPED}/g"  -e "s/%TOMCAT_KEYSTORE_STOREPASS%/${TOMCAT_KEYSTORE_STOREPASS}/g" -e "s/%SERVER_FQDN%/${SERVER_FQDN}/g" ${INSTALL_SCRIPTS_BASE}/templates/tomcat-server.xml.TEMPLATE > ${TOMCAT_CONF_DIR}/server.xml

}

#---------------------------------------------
# Main
#---------------------------------------------
generateServerCert
modifyTomcatConfig
stopTomcat
startTomcat




