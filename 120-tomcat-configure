#!/bin/bash 

. ./platform.properties
. ./functions
. ./functions-tomcat
. ./ca/ca.properties

#---------------------------------------------
copyServerCert() {
#---------------------------------------------

  KEY_FILE=${CA_SSL_SERVER_CERT_DIR}/${SERVER_FQDN}-key-no-pin.pem
  P12_FILE=${CA_SSL_SERVER_CERT_DIR}/${SERVER_FQDN}-key.p12
  JKS_FILE=${CA_SSL_SERVER_CERT_DIR}/${SERVER_FQDN}-key.jks
  CERT_FILE=${CA_SSL_SERVER_CERT_DIR}/${SERVER_FQDN}-cert.pem

  if [ ! -f ${KEY_FILE} ]; then
    printf "ERROR: Key file ${KEY_FILE} does not exist. You must create it first. Check the ca section.\n"
    exit 1 
  fi
  if [ ! -f ${CERT_FILE} ]; then
    printf "ERROR: Certificate file ${CERT_FILE} does not exist. You must create it first. Check the ca section.\n"
    exit 1 
  fi
  if [ ! -f ${P12_FILE} ]; then
    printf "ERROR: Key file ${P12_FILE} does not exist. You must create it first. Check the ca section.\n"
    exit 1 
  fi
  if [ ! -f ${JKS_FILE} ]; then
    printf "ERROR: Key file ${JKS_FILE} (Java Keystore) does not exist. You must create it first. Check the ca section.\n"
    exit 1 
  fi

  ${CP} ${KEY_FILE} ${TOMCAT_SERVER_KEY_PEM}
  ${CP} ${CERT_FILE} ${TOMCAT_SERVER_CERT_PEM}
  ${CP} ${P12_FILE} ${TOMCAT_SERVER_KEY_P12}
  ${CP} ${JKS_FILE} ${TOMCAT_KEYSTORE}
}

#---------------------------------------------
modifyTomcatConfig() {
#---------------------------------------------
  #
  # Backup Tomcat config
  #
  CONF_BACKUP=${TOMCAT_CONF_DIR}/server.xml.orig
  if [ -f ${TOMCAT_CONF_DIR}/server.xml ]; then
    if [ -f ${CONF_BACKUP} ]; then
      printf "INFO: The ${CONF_BACKUP} already exists. The tomcat config will not be backed up again.\n"
    else 
      ${CP} -p ${TOMCAT_CONF_DIR}/server.xml ${CONF_BACKUP}
      printf "INFO: Tomcat config backed up to ${CONF_BACKUP}.\n"
    fi
  fi

  #
  # Generate new server.xml from template
  #
  TOMCAT_KEYSTORE_ESCAPED=`escapePath ${TOMCAT_KEYSTORE}`
  ${SED} -e "s/%TOMCAT_HTTP_PORT%/${TOMCAT_HTTP_PORT}/g" -e "s/%TOMCAT_HTTPS_PORT%/${TOMCAT_HTTPS_PORT}/g" -e "s/%TOMCAT_KEYSTORE%/${TOMCAT_KEYSTORE_ESCAPED}/g"  -e "s/%TOMCAT_KEYSTORE_STOREPASS%/${TOMCAT_KEYSTORE_STOREPASS}/g" -e "s/%SERVER_FQDN%/${SERVER_FQDN}/g" ${INSTALL_SCRIPTS_BASE}/templates/tomcat-server.xml.TEMPLATE > ${TOMCAT_CONF_DIR}/server.xml

}

#---------------------------------------------
setJavaHome() {
#---------------------------------------------
  #
  # Backup catalina.sh
  #
  CATALINA_SH_BACKUP=${TOMCAT_BIN_DIR}/catalina.sh.orig
  if [ -f ${TOMCAT_BIN_DIR}/catalina.sh ]; then
    if [ -f ${CATALINA_SH_BACKUP} ]; then
      printf "INFO: The ${CATALINA_SH_BACKUP} already exists. The tomcat catalina.sh will not be backed up again.\n"
    else 
      ${CP} -p ${TOMCAT_BIN_DIR}/catalina.sh ${CATALINA_SH_BACKUP}
      printf "INFO: Tomcat catalina.sh backed up to ${CATALINA_SH_BACKUP}.\n"
    fi
  fi

  #
  # Set JAVA_HOME in catalina.sh
  #
  JAVA_HOME_ESCAPED=`escapePath ${JAVA_HOME}`

  ${SED} -i "2iJAVA_HOME=${JAVA_HOME_ESCAPED}\n" ${TOMCAT_BIN_DIR}/catalina.sh
  RC=$?
  if [ ${RC} != 0 ]; then
    "WARNING: SED returned error ${RC}\n"
  fi
}

#---------------------------------------------
# Main
#---------------------------------------------
copyServerCert
modifyTomcatConfig
setJavaHome
stopTomcat
startTomcat




